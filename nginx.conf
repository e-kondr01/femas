worker_processes auto;

user www-data;
pid /run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  use epoll;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;


  include /etc/nginx/mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;

  access_log /var/log/nginx/access.log combined;
  error_log  /var/log/nginx/error.log warn;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;
  add_header Strict-Transport-Security "max-age=3600; includeSubDomains" always;

  gzip on;

  server {
    listen          80;
    server_name     e-kondr01.ru www.e-kondr01.ru;
    rewrite ^/(.*)  https://e-kondr01.ru/$1 permanent;
  }

  server {
    listen [::]:443 ssl http2 ipv6only=on;
    listen 443 ssl http2;
    client_max_body_size 75M;

    # set the correct host(s) for your site
    server_name e-kondr01.ru www.e-kondr01.ru;

    #SSL settings
    ssl_certificate /etc/nginx/ssl/e-kondr01.crt;
    ssl_certificate_key /etc/nginx/ssl/e-kondr01.key;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
    resolver 8.8.8.8;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

   charset utf-8;

    # path for static files
    location /femas/static {
        alias /home/admin/femas/static; # your Django project's static files - amend as required
    }

    location /femas/media {
	alias /home/admin/femas/media;
    }

    location /femas {
      # checks for static file, if not found proxy to app
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://unix:/run/gunicorn.sock;
    }

  }
}
